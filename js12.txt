day-012
一:事件绑定的方式:
	1.obj.onclick=function(){...}
	2.<div onclick="fun()">
	3.addEventListener("去掉on的事件","回调函数","true/false")
二.事件监听
	好处:
		1.可以为同样的元素绑定多个事件
		2.程序员可以通过使用事件监听的方式,确定触发的过程市冒泡还是捕获;
	事件源:
		主流浏览器:.addEventListenner("去掉on的事件","回调函数","true/false");
		IE浏览器:attchEvent("on"+type,"回调函数");
	一个元素同时拥有捕获和冒泡的情况下,执行顺序是什么;
		先执行捕获在执行冒泡;
	事件监听的兼容写法:
		function addEvent(obj,type,callBack){
????????	if(obj.addEventListener){//非IE版本
????????????obj.addEventListener(type,callBack);
????????	}else{//IE版本
????????????obj.attachEvent("on"+type,callBack);
????????	}
????	}
????addEvent(document,"click",function(){alert("document")});
三.事件委托:
	委托：让别人去做
	事件委托：某个事件让其他元素来完成
? ?
	委托的好处：
? ?		1. 把某个事件加到父元素上，提高程序的执行效率
? ?		2. 动态创建的元素 可以在创建元素的函数体外部为其添加事件
	委托的机制：
?? ?? ? 利用事件冒泡（常见） 或者 事件捕获
? ? ? ? 不是所有事件都可以实现事件委托? 常见到也就那么几个?

委托的实现方法：
	父级元素.事件 = function(){...}
????<body>
????????<ul id = "list">
????????????<li>1</li>
????????????<li>2</li>
????????????<li>3</li>
????????????<li>4</li>
????????????<li>5</li>
????????</ul>
????</body>
	<script>
????	//利用事件委托 为每一个li添加单机事件
????	//处理事件程序为:改变当前操作的li的背景颜色
????	//委托里不能用this
????var oUl = document.getElementById("list");
????oUl.onclick = function(evt){
????????var e = evt || event;
????????//注意 实际操作的是li
????????//获取事件源
????????//targat就代表了当前操作的li
????????var targat = e.target || e.srcElement;
????????//alert(targat);
????????	if(targat.tagName == "LI"){
????????????targat.style.backgroundColor = "pink";
????????	}????
????	}
	</script>
四:拖拽效果
		拖拽思路： onmousedown onmousemove? onmouseup
		1.首先为需要拖拽的对象添加一个onmousedown事件
? ?		记录：鼠标点击某个对象时的内部偏移量
? ?		e.offsetX? e.offsetY
		2.鼠标在文档上移动
? ?		要想让操作的元素动起来，该元素必须有定位
? 		移动的过程，实际上改变，元素的left和top
		3.停止移动，需要触发onmouseup鼠标抬起时，取消移动?
? 		document.onmousemove = null;
五:JSON对象
		json: 轻量级存储工具，是一种跨平台的数据交互格式，
? ? ? ? 		作用：存储数据

		json对象定义:
?? ?? ? 		var json = {键:值,......};
? ? ? ? 	说明:严格的json对象 键必须用双引号引起来
? ? ? ? ? ? ? ?json的值可以是任意类型的?

		json 操作 赋值和取值
? ? ? ? 		取值： json.键
? ? ? ? ? ? ? ? ? ? json["键"]? 用于for in
? ? ? ? 	遍历取值? ?for in


	<script>
????	var myJson = {
????????"name":"laowang",
????????"age":18
????};
????
????//document.write(myJson.name);
????//document.write(myJson["name"]);
????
????for(var t in myJson){
????????console.log(t);
????????console.log(myJson[t]);
????}
	</script>